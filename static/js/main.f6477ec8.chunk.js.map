{"version":3,"sources":["components/layout/SigninLinks.js","actions/authActions.js","components/layout/SignoutlLink.js","components/layout/NavBar.js","components/dashboard/Notification.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/DashBoard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignOut.js","components/project/CreateProject.js","actions/projectActions.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignOutLinks","state","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createAt","calendar","projectList","projects","DashBoard","this","ProjectList","Notification","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","cred","credentials","signInWithEmailAndPassword","catch","err","SignOut","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","fireStore","authorId","add","authorID","Date","App","exact","path","component","ProjectDetails","SignUp","Boolean","window","location","hostname","initSate","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f6477ec8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../actions/authActions'\r\n\r\nconst SignInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Projects</NavLink>\r\n      </li>\r\n      <li>\r\n        <button className=\"btn-small grey darken-3 z-depth-0\" onClick={props.signOut}>\r\n          Log Out\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLinks);\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({\r\n                type: 'LOGIN_SUCCESS'\r\n            })\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'LOGIN_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport  const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res) => {\r\n            // console.log(res.user.uid);\r\n            \r\n            return firestore.collection(\"users\").doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0],\r\n              });\r\n        })\r\n        .then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Sign Up</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Log In</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignOutLinks;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignInLinks from \"./SigninLinks\";\r\nimport SignOutLinks from \"./SignoutlLink\";\r\nimport { connect } from 'react-redux'\r\n\r\nconst NavBar = (props) => {\r\n    const { auth, profile } = props\r\n    \r\n    // console.log(auth);\r\n    const links = auth.uid ? <SignInLinks profile={profile} /> : <SignOutLinks />\r\n    \r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo left\">Projecthub</Link>\r\n                {auth.isLoaded && links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    \r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    // console.log(notifications);\r\n    \r\n    \r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul>\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n      <div className=\"card z-depth-2 project-summary center\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n          <p className=\"grey-text\">{moment(project.createAt.toDate()).calendar()}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from  'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst projectList = ({ projects }) => {\r\n    return (\r\n      <div className=\"project-list section\">\r\n        {\r\n          projects && projects.map(project => {\r\n            return (\r\n              <Link to={'/project/' + project.id} key={project.id}>\r\n                <ProjectSummary project={project} />\r\n              </Link>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default projectList","import React, { Component } from 'react';\r\nimport Notifications from './Notification'\r\nimport ProjectList from '../project/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass DashBoard extends Component{\r\n    render(){\r\n        // console.log(this.props.projects);\r\n        const { projects, auth, notifications } = this.props;\r\n        // console.log(projects);\r\n        \r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        \r\n         return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\"><ProjectList projects={projects}/></div>\r\n                    <div className=\"col s12 m5 offset-m1\"><Notifications notifications={notifications} /></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    \r\n    return {\r\n        projects: state.firestore.ordered.project,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n        // projects: state.firestore.ordered.project\r\n    }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"project\", orderBy: [\"createAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(DashBoard);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = (props) => {\r\n    // const { projects } = props\r\n    // const id = props.match.params.id;\r\n    const { project, auth } = props\r\n    // console.log(project);\r\n    // const project = projects ? projects[id] : null;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    if(project) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n          <div className=\"card z-depth-2\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">Project Title -{project.title}</span>\r\n              <p>{project.content}</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div className=\"\">\r\n                Posted By {project.authorFirstName} {project.authorLastName}\r\n              </div>\r\n              <div>{moment(project.createAt.toDate()).calendar()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container center\">\r\n          <p>Loading project</p>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(ownProps.match.params.id);\r\n    // console.log(state);\r\n    \r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.project;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n         project: project,\r\n         auth: state.firebase.auth\r\n      //   projects: state.firestore.data.projects,\r\n      // projects: state.firestore.data.project,\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'project' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {signIn} from '../../actions/authActions';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n        \r\n    }\r\n    handleSubmit = (e) => {\r\n       e.preventDefault()\r\n    //    console.log(this.state);\r\n       this.props.signIn(this.state)\r\n               \r\n    }\r\n    render() {\r\n        // console.log(process.env.FIREBASE_CONFIG);\r\n        \r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to=\"/\" />;\r\n        return (\r\n          <div className=\"container\">\r\n            {auth.isLoaded && (\r\n              <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className=\"input-field\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                  <button className=\"btn pink lighten-1\">Login</button>\r\n                </div>\r\n                <div className=\"red-text center\">\r\n                  {authError ? <p>{authError}</p> : null}\r\n                </div>\r\n              </form>\r\n            )}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      authError: state.auth.authError,\r\n      auth: state.firebase.auth,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (cred) => dispatch(signIn(cred))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from '../../actions/authActions'\r\n\r\nclass SignOut extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: '',\r\n    lastName: ''\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Sign up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            { authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignOut);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/')\r\n\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const fireStore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        fireStore.collection('project').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorID: authorId,\r\n            createAt: new Date()\r\n        }).then(() => {\r\n             dispatch({ type: \"CREATE_PROJECT\", project });\r\n        }).catch((err) => {\r\n            dispatch(\r\n                {\r\n                    type: 'CREATE_PROJECT_ERROR',\r\n                    err\r\n                }\r\n            )\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar'\nimport DashBoard from './components/dashboard/DashBoard';\nimport ProjectDetails from './components/project/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignOut'\nimport CreateProject from './components/project/CreateProject'\nimport './App.css'\n\n\nclass App extends Component{\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={DashBoard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n// abhijeet@gmail.com\n// abhijeet12345;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initSate = {\r\n    authError: null\r\n\r\n} \r\nconst authReducer = (state = initSate, action) => {\r\n    switch (action.type) {\r\n      case \"LOGIN_ERROR\":\r\n        console.log(\"login failed\");\r\n\r\n        return {\r\n          ...state,\r\n          authError: \"Login failed\",\r\n        };\r\n      case \"LOGIN_SUCCESS\":\r\n        console.log(\"login success\");\r\n\r\n        return {\r\n          ...state,\r\n          authError: null,\r\n        };\r\n      case \"SIGNOUT_SUCCESS\":\r\n        console.log(\"signout success\");\r\n\r\n        return state;\r\n      case \"SIGNUP_SUCCESS\":\r\n        console.log(\"signup success\");\r\n        return {\r\n          ...state,\r\n          authError: null,\r\n        };\r\n      case \"SIGNUP_ERROR\":\r\n        console.log(\"signup failed\");\r\n        return {\r\n          ...state,\r\n          authError: action.err.message,\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","const initSate = {\r\n  projects: [\r\n    {id: 1, title: \"Project 1\", content: \"blah blah blah blah\"},\r\n    {id: 2, title: \"Project 2\", content: \"blah blah blah blah\"},\r\n    {id: 3, title: \"Project 3\", content: \"blah blah blah blah\"},\r\n  ]\r\n};\r\nconst projectReducer = (state = initSate, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"created project error\", action.err);\r\n      return state;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer'\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  // apiKey: `${process.env.FIREBASE_CONFIG}`,\r\n  apiKey: process.env.REACT_APP_FIREBASE_API,\r\n  authDomain: \"project-hub-f20fe.firebaseapp.com\",\r\n  databaseURL: \"https://project-hub-f20fe.firebaseio.com\",\r\n  projectId: \"project-hub-f20fe\",\r\n  storageBucket: \"project-hub-f20fe.appspot.com\",\r\n  messagingSenderId: \"158580751837\",\r\n  appId: \"1:158580751837:web:ebbd257325b45eeb730a34\",\r\n  measurementId: \"G-JFS1VMNM5V\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n// firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n// import { createStore, applyMiddleware, compose } from \"redux\";\n// import rootReducer from \"./reducers/rootReducer\";\n// import { Provider } from \"react-redux\";\n// import thunk from \"redux-thunk\";\n// import { reduxFirestore, getFirestore } from \"redux-firestore\";\n// import { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\n// import fbConfig from \"./config/fbconfig\";\n\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n//     reduxFirestore(fbConfig),\n//     reactReduxFirebase(fbConfig)\n//   )\n// );\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}>\n//       <App />\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n// import rootReducer from \"./store/reducers/rootReducer\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbconfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin:false\n}\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}